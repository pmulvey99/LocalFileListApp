<RibbonWindow x:Class="LocalFileListApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LocalFileListApp"
        xmlns:models="clr-namespace:LocalFileListApp.Models"
        mc:Ignorable="d"
        Title="Local File List" Height="450" Width="800" ResizeMode="CanResizeWithGrip" Loaded="RibbonWindow_Loaded" Closing="RibbonWindow_Closing">
    <RibbonWindow.Resources>
        <local:InvertBooleanConverter x:Key="InvertBooleanConverter"></local:InvertBooleanConverter>
        <local:FileItemIconConverter x:Key="FileItemIconConverter"></local:FileItemIconConverter>
        <local:BytesToStringConverter x:Key="BytesToStringConverter"></local:BytesToStringConverter>
        <ControlTemplate x:Key="BulletTemplate" TargetType="{x:Type ContentControl}">
            <BulletDecorator>
                <BulletDecorator.Bullet>
                    <Ellipse Width="5" Height="5" Fill="Black"></Ellipse>
                </BulletDecorator.Bullet>
                <ContentPresenter />
            </BulletDecorator>
        </ControlTemplate>

    </RibbonWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>

        <Ribbon Grid.Row="0">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenuItem x:Name="mnuExit" Header="Exit" Click="mnuExit_Click"></RibbonApplicationMenuItem>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Home">
                <RibbonGroup Header="Actions">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                            <Label Content="Select:"></Label>
                            <ComboBox x:Name="cboStorageDevices" Width="150" ItemsSource="{Binding AvailableStorageDevices}" DisplayMemberPath="Info" SelectedItem="{Binding SelectedStorageDevice, Mode=TwoWay}" IsEnabled="{Binding IsSelectedStorageDeviceBusy, Converter={StaticResource InvertBooleanConverter}}" VerticalContentAlignment="Center">
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.75"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </StackPanel>
                        <RibbonButton x:Name="btnStartScan" Grid.Column="1" Label="Start Scan" LargeImageSource="pack://application:,,,/Resources/Run128.png" IsEnabled="{Binding IsSelectedStorageDeviceBusy, Converter={StaticResource InvertBooleanConverter}}" Click="btnStartScan_Click"></RibbonButton>
                        <RibbonButton x:Name="btnStopScan" Grid.Column="2" Label="Stop Scan" LargeImageSource="pack://application:,,,/Resources/Stop128.png" IsEnabled="{Binding IsSelectedStorageDeviceBusy}" Click="btnStopScan_Click"></RibbonButton>
                    </Grid>
                </RibbonGroup>
                <RibbonGroup Header="Storage Information">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Free Space: "></TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedStorageDeviceFreeSpaceDisplayText}" Width="150" Margin="5,0,0,0" Foreground="#666666"></TextBlock>

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Directories: "></TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedStorageDirectoryCount}" Margin="5,0,0,0" Foreground="#666666"></TextBlock>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Files: "></TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding SelectedStorageFileCount}" Margin="5,0,0,0" Foreground="#666666"></TextBlock>

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Duration: "></TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding ScanDurationText}" Margin="5,0,0,0" Foreground="#666666"></TextBlock>
                    </Grid>
                </RibbonGroup>
            </RibbonTab>
            <RibbonTab Header="About">
                <RibbonGroup Header="Information" VerticalContentAlignment="Center">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="This is a small .NET &amp; WPF example project, which demonstrates:"></TextBlock>
                        <ContentControl Template="{StaticResource BulletTemplate}">
                            <TextBlock Text="Model-View-ViewModel and data binding, including value converters" Margin="5,0,0,0"></TextBlock>
                        </ContentControl>
                        <ContentControl Template="{StaticResource BulletTemplate}">
                            <TextBlock Text="Task-based parsing of file contents, to keep UI responsive" Margin="5,0,0,0"></TextBlock>
                        </ContentControl>
                        <ContentControl Template="{StaticResource BulletTemplate}">
                            <TextBlock Text="Unit testing with MSTest, including mock dependency injection" Margin="5,0,0,0"></TextBlock>
                        </ContentControl>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <TabControl Grid.Row="1">
            <TabItem Header="Browser">
                <!-- Set virtualisation on the treeview rendering https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/how-to-improve-the-performance-of-a-treeview?view=netframeworkdesktop-4.8 -->
                <TreeView x:Name="tvDriveContents" Grid.Row="1" ItemsSource="{Binding SelectedStorageDeviceFileContents}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <d:TreeView.ItemsSource>
                        <x:Array Type="{x:Type models:IFileItemModel}">
                            <models:FileItemModel Name="C:\\" ItemType="Drive"></models:FileItemModel>
                            <models:FileItemModel Name="Misc" ItemType="Directory"></models:FileItemModel>
                        </x:Array>
                    </d:TreeView.ItemsSource>

                    <!-- Set the first item in the tree (the drive) to be expanded -->
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="False"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ItemType, Converter={StaticResource FileItemIconConverter}}" Value="{StaticResource HardDriveIcon}">
                                    <Setter Property="IsExpanded" Value="True"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type models:FileItemModel}" ItemsSource="{Binding Items}">
                            <StackPanel Orientation="Horizontal">

                                <!-- Set the icon to either hard drive or folder, seems to not work when using ContentControl rather than Image... -->
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="pack://application:,,,/Resources/Document.png"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ItemType, Converter={StaticResource FileItemIconConverter}}" Value="{StaticResource FolderClosedIcon}">
                                                    <Setter Property="Source" Value="pack://application:,,,/Resources/FolderClosed.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ItemType, Converter={StaticResource FileItemIconConverter}}" Value="{StaticResource HardDriveIcon}">
                                                    <Setter Property="Source" Value="pack://application:,,,/Resources/HardDrive.png"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>

                                <TextBlock Text="{Binding Name, Mode=OneTime}" Margin="5,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="#333333"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ItemType, Converter={StaticResource FileItemIconConverter}}" Value="{StaticResource DocumentIcon}">
                                                    <Setter Property="Foreground" Value="#666666"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </TabItem>

            <TabItem Header="File List">
                <DataGrid x:Name="dgDriveContents" Grid.Row="0" d:ItemsSource="{d:SampleData}" ItemsSource="{Binding SelectedStorageDeviceFileContentsFlat}" AutoGenerateColumns="False" GridLinesVisibility="None" VerticalScrollBarVisibility="Visible" CanUserAddRows="False" HeadersVisibility="Column">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Name" Width="2*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type models:FileItemModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0" Width="16" Height="16">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Source" Value="pack://application:,,,/Resources/Document.png"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ItemType, Converter={StaticResource FileItemIconConverter}}" Value="{StaticResource FolderClosedIcon}">
                                                            <Setter Property="Source" Value="pack://application:,,,/Resources/FolderClosed.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ItemType, Converter={StaticResource FileItemIconConverter}}" Value="{StaticResource HardDriveIcon}">
                                                            <Setter Property="Source" Value="pack://application:,,,/Resources/HardDrive.png"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock Grid.Column="1" Text="{Binding FullName}" VerticalAlignment="Center"></TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Size" Binding="{Binding Size, Converter={StaticResource BytesToStringConverter}}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Files" Binding="{Binding FileCount}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Folders" Binding="{Binding FolderCount}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Last Modified" Binding="{Binding LastModifiedTime}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>

        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid IsItemsHost="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0" HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding ProcessingText}" TextAlignment="Left" HorizontalAlignment="Stretch" TextTrimming="WordEllipsis" VerticalAlignment="Center"></TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1" Margin="0,0,20,0" HorizontalAlignment="Right">
                <ProgressBar x:Name="progressProcessing" Width="250" Height="15" VerticalAlignment="Center" Value="{Binding ProcessingPercentage, Mode=OneWay}" Minimum="0" Maximum="1"></ProgressBar>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</RibbonWindow>
